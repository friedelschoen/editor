// Code generated by "stringer -type KeySym -output zkeys.go"; DO NOT EDIT.

package event

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[KSymNone-0]
	_ = x[KSym_dummy_-257]
	_ = x[KSym0-258]
	_ = x[KSym1-259]
	_ = x[KSym2-260]
	_ = x[KSym3-261]
	_ = x[KSym4-262]
	_ = x[KSym5-263]
	_ = x[KSym6-264]
	_ = x[KSym7-265]
	_ = x[KSym8-266]
	_ = x[KSym9-267]
	_ = x[KSymA-268]
	_ = x[KSymB-269]
	_ = x[KSymC-270]
	_ = x[KSymD-271]
	_ = x[KSymE-272]
	_ = x[KSymF-273]
	_ = x[KSymG-274]
	_ = x[KSymH-275]
	_ = x[KSymI-276]
	_ = x[KSymJ-277]
	_ = x[KSymK-278]
	_ = x[KSymL-279]
	_ = x[KSymM-280]
	_ = x[KSymN-281]
	_ = x[KSymO-282]
	_ = x[KSymP-283]
	_ = x[KSymQ-284]
	_ = x[KSymR-285]
	_ = x[KSymS-286]
	_ = x[KSymT-287]
	_ = x[KSymU-288]
	_ = x[KSymV-289]
	_ = x[KSymW-290]
	_ = x[KSymX-291]
	_ = x[KSymY-292]
	_ = x[KSymZ-293]
	_ = x[KSymSpace-294]
	_ = x[KSymBackspace-295]
	_ = x[KSymReturn-296]
	_ = x[KSymEscape-297]
	_ = x[KSymHome-298]
	_ = x[KSymLeft-299]
	_ = x[KSymUp-300]
	_ = x[KSymRight-301]
	_ = x[KSymDown-302]
	_ = x[KSymPageUp-303]
	_ = x[KSymPageDown-304]
	_ = x[KSymEnd-305]
	_ = x[KSymInsert-306]
	_ = x[KSymShiftL-307]
	_ = x[KSymShiftR-308]
	_ = x[KSymControlL-309]
	_ = x[KSymControlR-310]
	_ = x[KSymAltL-311]
	_ = x[KSymAltR-312]
	_ = x[KSymAltGr-313]
	_ = x[KSymSuperL-314]
	_ = x[KSymSuperR-315]
	_ = x[KSymDelete-316]
	_ = x[KSymTab-317]
	_ = x[KSymNumLock-318]
	_ = x[KSymCapsLock-319]
	_ = x[KSymExclam-320]
	_ = x[KSymDoubleQuote-321]
	_ = x[KSymNumberSign-322]
	_ = x[KSymDollar-323]
	_ = x[KSymPercent-324]
	_ = x[KSymAmpersand-325]
	_ = x[KSymApostrophe-326]
	_ = x[KSymParentL-327]
	_ = x[KSymParentR-328]
	_ = x[KSymAsterisk-329]
	_ = x[KSymPlus-330]
	_ = x[KSymComma-331]
	_ = x[KSymMinus-332]
	_ = x[KSymPeriod-333]
	_ = x[KSymSlash-334]
	_ = x[KSymBackSlash-335]
	_ = x[KSymColon-336]
	_ = x[KSymSemicolon-337]
	_ = x[KSymLess-338]
	_ = x[KSymEqual-339]
	_ = x[KSymGreater-340]
	_ = x[KSymQuestion-341]
	_ = x[KSymAt-342]
	_ = x[KSymBracketL-343]
	_ = x[KSymBracketR-344]
	_ = x[KSymGrave-345]
	_ = x[KSymAcute-346]
	_ = x[KSymCircumflex-347]
	_ = x[KSymTilde-348]
	_ = x[KSymCedilla-349]
	_ = x[KSymBreve-350]
	_ = x[KSymCaron-351]
	_ = x[KSymDiaresis-352]
	_ = x[KSymRingAbove-353]
	_ = x[KSymMacron-354]
	_ = x[KSymF1-355]
	_ = x[KSymF2-356]
	_ = x[KSymF3-357]
	_ = x[KSymF4-358]
	_ = x[KSymF5-359]
	_ = x[KSymF6-360]
	_ = x[KSymF7-361]
	_ = x[KSymF8-362]
	_ = x[KSymF9-363]
	_ = x[KSymF10-364]
	_ = x[KSymF11-365]
	_ = x[KSymF12-366]
	_ = x[KSymF13-367]
	_ = x[KSymF14-368]
	_ = x[KSymF15-369]
	_ = x[KSymF16-370]
	_ = x[KSymKeypad0-371]
	_ = x[KSymKeypad1-372]
	_ = x[KSymKeypad2-373]
	_ = x[KSymKeypad3-374]
	_ = x[KSymKeypad4-375]
	_ = x[KSymKeypad5-376]
	_ = x[KSymKeypad6-377]
	_ = x[KSymKeypad7-378]
	_ = x[KSymKeypad8-379]
	_ = x[KSymKeypad9-380]
	_ = x[KSymKeypadMultiply-381]
	_ = x[KSymKeypadAdd-382]
	_ = x[KSymKeypadSubtract-383]
	_ = x[KSymKeypadDecimal-384]
	_ = x[KSymKeypadDivide-385]
	_ = x[KSymVolumeUp-386]
	_ = x[KSymVolumeDown-387]
	_ = x[KSymMute-388]
	_ = x[KSymMultiKey-389]
	_ = x[KSymMenu-390]
}

const (
	_KeySym_name_0 = "KSymNone"
	_KeySym_name_1 = "KSym_dummy_KSym0KSym1KSym2KSym3KSym4KSym5KSym6KSym7KSym8KSym9KSymAKSymBKSymCKSymDKSymEKSymFKSymGKSymHKSymIKSymJKSymKKSymLKSymMKSymNKSymOKSymPKSymQKSymRKSymSKSymTKSymUKSymVKSymWKSymXKSymYKSymZKSymSpaceKSymBackspaceKSymReturnKSymEscapeKSymHomeKSymLeftKSymUpKSymRightKSymDownKSymPageUpKSymPageDownKSymEndKSymInsertKSymShiftLKSymShiftRKSymControlLKSymControlRKSymAltLKSymAltRKSymAltGrKSymSuperLKSymSuperRKSymDeleteKSymTabKSymNumLockKSymCapsLockKSymExclamKSymDoubleQuoteKSymNumberSignKSymDollarKSymPercentKSymAmpersandKSymApostropheKSymParentLKSymParentRKSymAsteriskKSymPlusKSymCommaKSymMinusKSymPeriodKSymSlashKSymBackSlashKSymColonKSymSemicolonKSymLessKSymEqualKSymGreaterKSymQuestionKSymAtKSymBracketLKSymBracketRKSymGraveKSymAcuteKSymCircumflexKSymTildeKSymCedillaKSymBreveKSymCaronKSymDiaresisKSymRingAboveKSymMacronKSymF1KSymF2KSymF3KSymF4KSymF5KSymF6KSymF7KSymF8KSymF9KSymF10KSymF11KSymF12KSymF13KSymF14KSymF15KSymF16KSymKeypad0KSymKeypad1KSymKeypad2KSymKeypad3KSymKeypad4KSymKeypad5KSymKeypad6KSymKeypad7KSymKeypad8KSymKeypad9KSymKeypadMultiplyKSymKeypadAddKSymKeypadSubtractKSymKeypadDecimalKSymKeypadDivideKSymVolumeUpKSymVolumeDownKSymMuteKSymMultiKeyKSymMenu"
)

var (
	_KeySym_index_1 = [...]uint16{0, 11, 16, 21, 26, 31, 36, 41, 46, 51, 56, 61, 66, 71, 76, 81, 86, 91, 96, 101, 106, 111, 116, 121, 126, 131, 136, 141, 146, 151, 156, 161, 166, 171, 176, 181, 186, 191, 200, 213, 223, 233, 241, 249, 255, 264, 272, 282, 294, 301, 311, 321, 331, 343, 355, 363, 371, 380, 390, 400, 410, 417, 428, 440, 450, 465, 479, 489, 500, 513, 527, 538, 549, 561, 569, 578, 587, 597, 606, 619, 628, 641, 649, 658, 669, 681, 687, 699, 711, 720, 729, 743, 752, 763, 772, 781, 793, 806, 816, 822, 828, 834, 840, 846, 852, 858, 864, 870, 877, 884, 891, 898, 905, 912, 919, 930, 941, 952, 963, 974, 985, 996, 1007, 1018, 1029, 1047, 1060, 1078, 1095, 1111, 1123, 1137, 1145, 1157, 1165}
)

func (i KeySym) String() string {
	switch {
	case i == 0:
		return _KeySym_name_0
	case 257 <= i && i <= 390:
		i -= 257
		return _KeySym_name_1[_KeySym_index_1[i]:_KeySym_index_1[i+1]]
	default:
		return "KeySym(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
